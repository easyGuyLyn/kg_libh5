apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.akz.qtzqbf"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        flavorDimensions("channel")
        multiDexEnabled true


        versionCode 22
        versionName '1.5.5'
        dimension '棋牌项目'  //app name

        ndk {
            //,"x86"
            abiFilters "armeabi-v7a"
        }
    }


    def aid = "com.nihaokt.ttqp" //applicationId

    def jg_appkey = "c398428d15577c1ee6444bc3" //极光 appkey

    def um_key = "\"5e4654df0cafb2f3fe000180\""
    def um_push_key = "\"eb1bb8f2904fe6a022c9dbff56b07f3a\""



    signingConfigs {

        config {
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
            properties.load(inputStream)
                //读取文件
                def sdkDir = properties.getProperty('keyFile')

                //读取字段
                def key_keyAlias = properties.getProperty('keyAlias')
                def key_keyPassword = properties.getProperty('keyPassword')
                def key_storePassword = properties.getProperty('storePassword')

                storeFile file(sdkDir)
                storePassword key_storePassword
                keyAlias key_keyAlias
                keyPassword key_keyPassword
        }
    }



    buildTypes {
        debug {
            buildConfigField("String", "um_key", um_key)
            buildConfigField("String", "um_push_key", um_push_key)
            // 不开启混淆
            minifyEnabled false
            // 不开启ZipAlign优化
            zipAlignEnabled false
            // 不移除无用的resource文件
            shrinkResources false
            // 使用config签名
            signingConfig signingConfigs.config
//            debuggable true
//            testCoverageEnabled true
            // 混淆文件位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            buildConfigField("String", "um_key", um_key)
            buildConfigField("String", "um_push_key", um_push_key)
            //
            minifyEnabled true
            // 开启ZipAlign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 使用config签名
            signingConfig signingConfigs.config
            // 混淆文件位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 批量打包
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    //输出apk名称为：渠道名_版本名.apk
                    outputFileName = "${variant.productFlavors[0].name}_${defaultConfig.dimension}_${defaultConfig.versionName}.apk"
                }
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    //解决方法数 过大的问题
    dexOptions {
        jumboMode true
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }


    // 多渠道 的不同配置
    productFlavors {

        def pid_pex = ".fileprovider"


        def appName = defaultConfig.dimension

        棋牌一 {
            applicationId aid + ""
            resValue "string", "app_name", appName
            resValue "string", "chanel", "2"
            manifestPlaceholders = [pro_id         : applicationId + pid_pex
                                    , r_process    : ":" + applicationId.substring(applicationId.lastIndexOf(".") + 1)
                                    , JPUSH_APPKEY : jg_appkey + ""
                                    , JPUSH_CHANNEL: "developer-qpai"]
        }


    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //最_基础库
    implementation project(':baselib')

}
